{"version":3,"names":["describe","test","container","render","expect","getByText","toBeTruthy","toMatchSnapshot","prefix","decimalSeparator","groupSeparator","precision","toHaveStyle","fontWeight","fontStyle","textDecorationLine"],"sources":["MaskedText.test.tsx"],"sourcesContent":["import React from 'react'\r\nimport { render } from '@testing-library/react-native';\r\nimport { MaskedText } from './MaskedText';\r\n\r\ndescribe('<MaskedText />', () => {\r\n  test('should renders correctly with custom mask', () => {\r\n    const container = render(<MaskedText mask=\"AAA-999\">RCT777</MaskedText>);\r\n\r\n    expect(container.getByText('RCT-777')).toBeTruthy();\r\n\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n\r\n  test('should renders correctly with currency mask', () => {\r\n    const container = render(\r\n      <MaskedText\r\n        type=\"currency\"\r\n        options={{\r\n          prefix: '$',\r\n          decimalSeparator: '.',\r\n          groupSeparator: ',',\r\n          precision: 2,\r\n        }}\r\n      >\r\n        5999\r\n      </MaskedText>\r\n    );\r\n\r\n    expect(container.getByText('$59.99')).toBeTruthy();\r\n\r\n    expect(container).toMatchSnapshot();\r\n  });\r\n  test('should be bold when the textBold attribute is added', () => {\r\n    const container  =\r\n    render(<MaskedText textBold mask=\"99/99/9999\">\r\n        30081990\r\n      </MaskedText>)\r\n      expect(container.getByText('30/08/1990')).toHaveStyle({fontWeight: 'bold' });\r\n    });\r\n    test('should be italic when the textItalic attribute is added', () => {\r\n      const container  =\r\n      render(<MaskedText textItalic mask=\"99/99/9999\">\r\n          30081990\r\n        </MaskedText>)\r\n        expect(container.getByText('30/08/1990')).toHaveStyle({fontStyle: 'italic' });\r\n    });\r\n    test('should be the line style added to the text when the textDecoration attribute has a non-null value', () => {\r\n      const textDecorationLine = 'underline'\r\n      const container  =\r\n      render(<MaskedText textDecoration={textDecorationLine} mask=\"99/99/9999\">\r\n          30081990\r\n        </MaskedText>)\r\n        expect(container.getByText('30/08/1990')).toHaveStyle({textDecorationLine: textDecorationLine });\r\n    });    \r\n})\r\n"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;EAC/BC,IAAI,CAAC,2CAAD,EAA8C,MAAM;IACtD,MAAMC,SAAS,GAAG,IAAAC,mBAAA,gBAAO,6BAAC,sBAAD;MAAY,IAAI,EAAC;IAAjB,YAAP,CAAlB;IAEAC,MAAM,CAACF,SAAS,CAACG,SAAV,CAAoB,SAApB,CAAD,CAAN,CAAuCC,UAAvC;IAEAF,MAAM,CAACF,SAAD,CAAN,CAAkBK,eAAlB;EACD,CANG,CAAJ;EAQAN,IAAI,CAAC,6CAAD,EAAgD,MAAM;IACxD,MAAMC,SAAS,GAAG,IAAAC,mBAAA,gBAChB,6BAAC,sBAAD;MACE,IAAI,EAAC,UADP;MAEE,OAAO,EAAE;QACPK,MAAM,EAAE,GADD;QAEPC,gBAAgB,EAAE,GAFX;QAGPC,cAAc,EAAE,GAHT;QAIPC,SAAS,EAAE;MAJJ;IAFX,UADgB,CAAlB;IAcAP,MAAM,CAACF,SAAS,CAACG,SAAV,CAAoB,QAApB,CAAD,CAAN,CAAsCC,UAAtC;IAEAF,MAAM,CAACF,SAAD,CAAN,CAAkBK,eAAlB;EACD,CAlBG,CAAJ;EAmBAN,IAAI,CAAC,qDAAD,EAAwD,MAAM;IAChE,MAAMC,SAAS,GACf,IAAAC,mBAAA,gBAAO,6BAAC,sBAAD;MAAY,QAAQ,MAApB;MAAqB,IAAI,EAAC;IAA1B,cAAP,CADA;IAIEC,MAAM,CAACF,SAAS,CAACG,SAAV,CAAoB,YAApB,CAAD,CAAN,CAA0CO,WAA1C,CAAsD;MAACC,UAAU,EAAE;IAAb,CAAtD;EACD,CANC,CAAJ;EAOEZ,IAAI,CAAC,yDAAD,EAA4D,MAAM;IACpE,MAAMC,SAAS,GACf,IAAAC,mBAAA,gBAAO,6BAAC,sBAAD;MAAY,UAAU,MAAtB;MAAuB,IAAI,EAAC;IAA5B,cAAP,CADA;IAIEC,MAAM,CAACF,SAAS,CAACG,SAAV,CAAoB,YAApB,CAAD,CAAN,CAA0CO,WAA1C,CAAsD;MAACE,SAAS,EAAE;IAAZ,CAAtD;EACH,CANG,CAAJ;EAOAb,IAAI,CAAC,mGAAD,EAAsG,MAAM;IAC9G,MAAMc,kBAAkB,GAAG,WAA3B;IACA,MAAMb,SAAS,GACf,IAAAC,mBAAA,gBAAO,6BAAC,sBAAD;MAAY,cAAc,EAAEY,kBAA5B;MAAgD,IAAI,EAAC;IAArD,cAAP,CADA;IAIEX,MAAM,CAACF,SAAS,CAACG,SAAV,CAAoB,YAApB,CAAD,CAAN,CAA0CO,WAA1C,CAAsD;MAACG,kBAAkB,EAAEA;IAArB,CAAtD;EACH,CAPG,CAAJ;AAQH,CAlDO,CAAR"}